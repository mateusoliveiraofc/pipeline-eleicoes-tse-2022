services:
  # PostgreSQL - Data Warehouse
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow123
      POSTGRES_DB: eleicoes_dw
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - Data Lake
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123456
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis para Airflow
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Airflow Webserver
  airflow-webserver:
    build: ./airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow123@postgres:5432/eleicoes_dw
      AIRFLOW__CORE__FERNET_KEY: 'YlmRTBZ394p0_YlmRTBZ394p0_YlmRTBZ394p0_YlmRT='
      AIRFLOW__WEBSERVER__SECRET_KEY: 'my-secret-key-for-airflow-webserver-2024'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      PYTHONPATH: /opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./dbt:/opt/airflow/dbt
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      bash -c "
      airflow db migrate &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin123 &&
      airflow webserver
      "

  # Airflow Scheduler
  airflow-scheduler:
    build: ./airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow123@postgres:5432/eleicoes_dw
      AIRFLOW__CORE__FERNET_KEY: 'YlmRTBZ394p0_YlmRTBZ394p0_YlmRTBZ394p0_YlmRT='
      AIRFLOW__WEBSERVER__SECRET_KEY: 'my-secret-key-for-airflow-webserver-2024'  # ‚Üê CHAVE IGUAL
      PYTHONPATH: /opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./dbt:/opt/airflow/dbt
    depends_on:
      postgres:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
    command: airflow scheduler

volumes:
  postgres_data:
  minio_data: